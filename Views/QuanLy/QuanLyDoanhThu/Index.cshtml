@{
    ViewData["Title"] = "Quản Lý Doanh Thu";
}
<link rel="stylesheet" href="~/css/QuanLy/QuanLyDoanhThu.css" />
<h2>Quản Lý Doanh Thu</h2>

<label for="ngayChon">Chọn Thời Gian:</label>
<input type="date" id="ngayChon" class="form-control" style="width: 300px; margin-bottom: 20px;" />

<h3 style="margin-top: 40px;">So Sánh Doanh Thu Theo Ngày</h3>
<table id="bangSoSanhNgay" class="table table-bordered" style="width: 600px;">
    <thead>
        <tr>
            <th>So sánh doanh thu</th>
            <th id="ngayTruoc">Ngày ...</th>
            <th id="ngaySau">Ngày ...</th>
            <th>Chênh lệch</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>So sánh doanh thu</td>
            <td id="doanhThuNgayTruoc">...</td>
            <td id="doanhThuNgaySau">...</td>
            <td id="chenhLechNgay">...</td>
        </tr>
    </tbody>
</table>
<canvas id="doanhThuChart" width="1000" height="400"></canvas>


<h3 style="margin-top: 40px;">So Sánh Doanh Thu Theo Tháng </h3>
<table id="bangSoSanh" class="table table-bordered" style="width: 600px;">
    <thead>
        <tr>
            <th>So sánh doanh thu </th>
            <th id="thangTruoc">Tháng ...</th>
            <th id="thangSau">Tháng ...</th>
            <th>Chênh lệch</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>So sánh doanh thu</td>
            <td id="doanhThuThangTruoc">...</td>
            <td id="doanhThuThangSau">...</td>
            <td id="chenhLech">...</td>
        </tr>
    </tbody>
</table>
<canvas id="doanhThuChartThang" width="1000" height="400" style="margin-top: 30px;"></canvas>


<h3 style="margin-top: 40px;">So Sánh Doanh Thu Theo Năm</h3>
<table id="bangSoSanhNam" class="table table-bordered" style="width: 600px;">
    <thead>
        <tr>
            <th>So sánh doanh thu  </th>
            <th id="namTruoc">Năm ...</th>
            <th id="namSau">Năm ...</th>
            <th>Chênh lệch</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>So sánh doanh thu</td>
            <td id="doanhThuNamTruoc">...</td>
            <td id="doanhThuNamSau">...</td>
            <td id="chenhLechNam">...</td>
        </tr>
    </tbody>
</table>
<canvas id="doanhThuChartNam" width="1000" height="400" style="margin-top: 30px;"></canvas>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
<script>
    let chartNgay, chartThang, chartNam;
    let selectedDays = [];
    let selectedMonths = [];
    let selectedYears = [];


    function taiDuLieuTheoNgayChon(date) {
        if (!date) return;

        fetch(`/DoanhThuQuanLy/GetDoanhThuTheoNgayChon?date=${date}`)
            .then(res => res.json())
            .then(data => {
                const labels = data.map(d => d.ngay);
                const doanhThu = data.map(d => d.tongTien);

                if (chartNgay) chartNgay.destroy();
                const ctx = document.getElementById('doanhThuChart').getContext('2d');
                chartNgay = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Doanh Thu Theo Tuần',
                            data: doanhThu,
                            backgroundColor: doanhThu.map(value => {
                                if (value < 1000000) return 'rgba(255, 0, 0, 0.6)';           // đỏ                chỗ để chỉnh màu của doanh thu nè
                                if (value < 5000000) return 'rgba(255, 165, 0, 0.6)';         // cam
                                if (value < 10000000) return 'rgba(255, 255, 0, 0.6)';        // vàng
                                return 'rgba(0, 255, 0, 0.6)';                                 // xanh lá
                            }),
                            borderColor: 'rgba(255, 255, 255, 0.8)',
                            borderWidth: 1
                        }]
                    },
                    plugins: [ChartDataLabels],
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    color: 'white'
                                }
                            },
                            datalabels: {
                                color: 'white',
                                anchor: 'center',
                                align: 'center',
                                formatter: function (value) {
                                    return value.toLocaleString('vi-VN') + ' VND';
                                },
                                font: {
                                    weight: 'bold'
                                }
                            },
                            tooltip: {
                                titleColor: 'white',
                                bodyColor: 'white',
                                backgroundColor: 'rgba(0, 0, 0, 0.8)'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    color: 'white',
                                    callback: function (value) {
                                        return value.toLocaleString('vi-VN') + ' VND';
                                    }
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.2)'
                                }
                            },
                            x: {
                                ticks: {
                                    color: 'white'
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.2)'
                                }
                            }
                        },
                        onClick: function (event, elements) {
                            if (elements.length > 0) {
                                const i = elements[0].index;
                                const label = this.data.labels[i];
                                const value = this.data.datasets[0].data[i];

                                selectedDays.push({ ngay: label, doanhThu: value });
                                if (selectedDays.length > 2) selectedDays.shift();

                                if (selectedDays.length === 2) {
                                    const [d1, d2] = selectedDays;

                                    document.getElementById("ngayTruoc").innerText = d1.ngay;
                                    document.getElementById("ngaySau").innerText = d2.ngay;
                                    document.getElementById("doanhThuNgayTruoc").innerText = d1.doanhThu.toLocaleString('vi-VN') + ' VND';
                                    document.getElementById("doanhThuNgaySau").innerText = d2.doanhThu.toLocaleString('vi-VN') + ' VND';

                                    const diff = d2.doanhThu - d1.doanhThu;
                                    document.getElementById("chenhLechNgay").innerText =
                                        diff === 0 ? "Doanh thu không thay đổi" :
                                            diff > 0 ? `Doanh thu ${d2.ngay} hơn ${d1.ngay}:  ${diff.toLocaleString('vi-VN')} VND` :
                                                `Doanh thu ${d2.ngay} thấp hơn ${d1.ngay}:  ${Math.abs(diff).toLocaleString('vi-VN')} VND`;
                                }
                            }
                        }
                    }
                });

                if (data.length >= 2) {
                    const len = data.length;
                    const d1 = data[len - 2];
                    const d2 = data[len - 1];

                    const ngay1 = d1.ngay;
                    const ngay2 = d2.ngay;

                    const doanhThu1 = d1.tongTien;
                    const doanhThu2 = d2.tongTien;

                    const chenhLech = doanhThu2 - doanhThu1;
                    const textChenhLech = chenhLech === 0
                        ? 'Doanh thu không thay đổi'
                        : chenhLech > 0
                            ? `Doanh thu ngày này hơn: ${chenhLech.toLocaleString('vi-VN')} VND`
                            : `Doanh thu ngày này thấp hơn: ${Math.abs(chenhLech).toLocaleString('vi-VN')} VND`;

                    document.getElementById("ngayTruoc").innerText = ngay1;
                    document.getElementById("ngaySau").innerText = ngay2;
                    document.getElementById("doanhThuNgayTruoc").innerText = doanhThu1.toLocaleString('vi-VN') + ' VND';
                    document.getElementById("doanhThuNgaySau").innerText = doanhThu2.toLocaleString('vi-VN') + ' VND';
                    document.getElementById("chenhLechNgay").innerText = textChenhLech;
                }
            });

        fetch(`/DoanhThuQuanLy/GetDoanhThuTheoThang?date=${date}`)
            .then(res => res.json())
            .then(data => {
                const labels = data.map(d => d.thang);
                const doanhThu = data.map(d => d.tongTien);

                if (chartThang) chartThang.destroy();

                const ctx = document.getElementById('doanhThuChartThang').getContext('2d');

                const gradient = ctx.createLinearGradient(0, 0, ctx.canvas.width, 0); // mới thêm để tạo màu cho line biểu đồ
                gradient.addColorStop(0, 'red');
                gradient.addColorStop(0.5, 'orange');
                gradient.addColorStop(1, 'green');

                chartThang = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Doanh Thu Theo Tháng',
                            data: doanhThu,
                            // backgroundColor dùng cho điểm (nếu muốn màu theo từng điểm)
                            pointBackgroundColor: doanhThu.map(value => {
                                // Mức thấp → đỏ, trung bình → vàng, cao → xanh lá
                                if (value < 1000000) return 'red';
                                if (value < 5000000) return 'orange';
                                return 'green';
                            }),
                            borderColor: gradient,
                            borderWidth: 2,
                            tension: 0.3,
                            fill: false
                        }]
                    },
                    plugins: [ChartDataLabels],
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    color: 'white' // màu chữ trong chú thích
                                }
                            },
                            datalabels: {
                                color: 'white',
                                anchor: 'end',
                                align: 'top',
                                formatter: function (value) {
                                    return value.toLocaleString('vi-VN') + ' VND';
                                },
                                font: {
                                    weight: 'bold'
                                }
                            },
                            tooltip: {
                                titleColor: 'white',
                                bodyColor: 'white',
                                backgroundColor: 'rgba(0, 0, 0, 0.8)'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    color: 'white', // màu chữ trục Y
                                    callback: function (value) {
                                        return value.toLocaleString('vi-VN') + ' VND';
                                    }
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.2)' // lưới trục Y mờ
                                }
                            },
                            x: {
                                ticks: {
                                    color: 'white' // màu chữ trục X
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.2)' // lưới trục X mờ
                                }
                            }
                        },

                        onClick: function (event, elements) {
                            if (elements.length > 0) {
                                const chartIndex = elements[0].index;
                                const thangLabel = this.data.labels[chartIndex];
                                const doanhThuValue = this.data.datasets[0].data[chartIndex];

                                selectedMonths.push({ thang: thangLabel, doanhThu: doanhThuValue });
                                if (selectedMonths.length > 2) selectedMonths.shift();

                                if (selectedMonths.length === 2) {
                                    const m1 = selectedMonths[0];
                                    const m2 = selectedMonths[1];

                                    document.getElementById("thangTruoc").innerText = " " + m1.thang;
                                    document.getElementById("thangSau").innerText = " " + m2.thang;
                                    document.getElementById("doanhThuThangTruoc").innerText = m1.doanhThu.toLocaleString('vi-VN') + ' VND';
                                    document.getElementById("doanhThuThangSau").innerText = m2.doanhThu.toLocaleString('vi-VN') + ' VND';

                                    const diff = m2.doanhThu - m1.doanhThu;
                                    const msg = diff === 0
                                        ? "Doanh thu không thay đổi"
                                        : diff > 0
                                            ? `Doanh thu  ${m2.thang} hơn ${m1.thang} : ${diff.toLocaleString('vi-VN')} VND`
                                            : `Doanh thu  ${m2.thang} thấp hơn  ${m1.thang} : ${Math.abs(diff).toLocaleString('vi-VN')} VND`;

                                    document.getElementById("chenhLech").innerText = msg;
                                }
                            }
                        }
                    }
                });

                //ban dau
                if (data.length >= 2) {
                    const len = data.length;
                    const thangSau = data[len - 1];
                    const thangTruoc = data[len - 2];

                    const tenThangSau = ` ${thangSau.thang}`;
                    const tenThangTruoc = ` ${thangTruoc.thang}`;

                    const tienSau = thangSau.tongTien;
                    const tienTruoc = thangTruoc.tongTien;

                    const chenhLechTien = tienSau - tienTruoc;
                    const textChenhLech = chenhLechTien === 0
                        ? 'Doanh thu không thay đổi'
                        : chenhLechTien > 0
                            ? `Doanh thu tháng này hơn: ${chenhLechTien.toLocaleString('vi-VN')} VND`
                            : `Doanh thu tháng này thấp hơn: ${Math.abs(chenhLechTien).toLocaleString('vi-VN')} VND`;

                    document.getElementById("thangTruoc").innerText = tenThangTruoc;
                    document.getElementById("thangSau").innerText = tenThangSau;
                    document.getElementById("doanhThuThangTruoc").innerText = tienTruoc.toLocaleString('vi-VN') + ' VND';
                    document.getElementById("doanhThuThangSau").innerText = tienSau.toLocaleString('vi-VN') + ' VND';
                    document.getElementById("chenhLech").innerText = textChenhLech;
                }
            });

        fetch(`/DoanhThuQuanLy/GetDoanhThuTheoNam?date=${date}`)
            .then(res => res.json())
            .then(data => {
                const labels = data.map(d => d.nam);
                const doanhThu = data.map(d => d.tongTien);
                if (chartNam) chartNam.destroy();
                const ctx = document.getElementById('doanhThuChartNam').getContext('2d');
                const gradient = ctx.createLinearGradient(0, 0, ctx.canvas.width, 0);
                gradient.addColorStop(0, 'red');
                gradient.addColorStop(0.5, 'orange');
                gradient.addColorStop(1, 'green');

                chartNam = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Doanh Thu Theo Năm',
                            data: doanhThu,
                            borderColor: gradient, // Gradient màu line
                            pointBackgroundColor: 'white', // Màu chấm tròn
                            borderWidth: 2,
                            tension: 0.3,
                            fill: false
                        }]
                    },
                    plugins: [ChartDataLabels],
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    color: 'white' // nếu dùng nền tối
                                }
                            },
                            datalabels: {
                                anchor: 'end',
                                align: 'top',
                                color: 'white',
                                formatter: value => value.toLocaleString('vi-VN') + ' VND',
                                font: { weight: 'bold' }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    color: 'white',
                                    callback: value => value.toLocaleString('vi-VN') + ' VND'
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.2)'
                                }
                            },
                            x: {
                                ticks: {
                                    color: 'white'
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.2)'
                                }
                            }
                        },
                        onClick: function (event, elements) {
                            if (elements.length > 0) {
                                const i = elements[0].index;
                                const label = this.data.labels[i];
                                const value = this.data.datasets[0].data[i];
                                selectedYears.push({ nam: label, doanhThu: value });
                                if (selectedYears.length > 2) selectedYears.shift();
                                if (selectedYears.length === 2) {
                                    const [y1, y2] = selectedYears;
                                    document.getElementById("namTruoc").innerText = " " + y1.nam;
                                    document.getElementById("namSau").innerText = " " + y2.nam;
                                    document.getElementById("doanhThuNamTruoc").innerText = y1.doanhThu.toLocaleString('vi-VN') + ' VND';
                                    document.getElementById("doanhThuNamSau").innerText = y2.doanhThu.toLocaleString('vi-VN') + ' VND';
                                    const diff = y2.doanhThu - y1.doanhThu;
                                    document.getElementById("chenhLechNam").innerText =
                                        diff === 0 ? "Doanh thu không thay đổi" :
                                            diff > 0 ? `Doanh thu ${y2.nam} hơn ${y1.nam} : ${diff.toLocaleString('vi-VN')} VND` :
                                                `Doanh thu ${y2.nam} thấp hơn ${y1.nam} : ${Math.abs(diff).toLocaleString('vi-VN')} VND`;
                                }
                            }
                        }
                    }
                });

                if (data.length >= 2) {
                    const [y1, y2] = data.slice(-2);
                    const diff = y2.tongTien - y1.tongTien;
                    document.getElementById("namTruoc").innerText = " " + y1.nam;
                    document.getElementById("namSau").innerText = " " + y2.nam;
                    document.getElementById("doanhThuNamTruoc").innerText = y1.tongTien.toLocaleString('vi-VN') + ' VND';
                    document.getElementById("doanhThuNamSau").innerText = y2.tongTien.toLocaleString('vi-VN') + ' VND';
                    document.getElementById("chenhLechNam").innerText =
                        diff === 0 ? "Doanh thu không thay đổi" :
                            diff > 0 ? `Doanh thu năm này hơn: ${diff.toLocaleString('vi-VN')} VND` :
                                `Doanh thu năm này thấp hơn: ${Math.abs(diff).toLocaleString('vi-VN')} VND`;
                }
            });
    }

    document.getElementById("ngayChon").addEventListener("change", function () {
        const date = this.value;
        taiDuLieuTheoNgayChon(date);
    });

    window.onload = function () {
        const today = new Date().toISOString().split('T')[0];
        document.getElementById("ngayChon").value = today;
        taiDuLieuTheoNgayChon(today);
    };
</script>