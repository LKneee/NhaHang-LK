@model IEnumerable<NhaHang.Models.Menu>
<link rel="stylesheet" href="~/css/NhanVienPhucVu/MenuNvpv.css" />
@{
    Layout = "~/Views/Shared/_Layout_NhanVienPhucVu.cshtml";
    var ban = Context.Request.Query["ban"];
    var hoTen = Context.Session.GetString("UserName");
    var email = Context.Session.GetString("UserEmail");

}

<h2>Menu</h2>

<div class="btn-group mb-3">
    <a href="/MenuNvpv?ban=@ban" class="btn btn-secondary">Tất Cả</a>
    <a href="/MenuNvpv/HaiSan?ban=@ban" class="btn btn-primary">Hải Sản</a>
    <a href="/MenuNvpv/Ga?ban=@ban" class="btn btn-primary">Gà</a>
    <a href="/MenuNvpv/Bo?ban=@ban" class="btn btn-primary">Bò</a>
    <a href="/MenuNvpv/Salad?ban=@ban" class="btn btn-primary">Salad</a>
    <a href="/MenuNvpv/TrangMieng?ban=@ban" class="btn btn-primary">Tráng Miệng</a>
</div>



<hr />

<div class="row">
    @if (Model != null && Model.Any())
    {
        foreach (var pro in Model)
        {
            var tenMon = pro.TenMon.Replace(" ", "");
            <div class="col-md-4 col-sm-6 mb-4">
                <div class="card h-100">                   
                        @if (!string.IsNullOrEmpty(pro.Image))
                        {
                            <a href="@Url.Action("ChiTiet", "MenuNvpv", new { tenMonAn = tenMon })">
                                <img src="~/Menu/@pro.Image" class="card-img-top" alt="@pro.TenMon" style="height: 200px; object-fit: cover;" />
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("ChiTiet", "MenuNvpv", new { tenMonAn = tenMon })">
                                <img src="~/image/default.jpg" class="card-img-top" alt="No Image" style="height: 200px; object-fit: cover;" />
                            </a>
                        }
                        <div class="card-body">
                        <a href="@Url.Action("ChiTiet", "MenuNvpv", new { tenMonAn = tenMon })">
                            <h5 class="card-title">@pro.TenMon</h5>
                        </a>
                            <p class="card-text">@pro.MoTa</p>
                            <p class="card-text"><strong>@pro.Gia.ToString("N0")</strong> VND</p>
                            <button class="btn btn-success" onclick="themVaoPhieu('@pro.TenMon', @pro.Gia)">Chọn</button>
                        </div>
                 
                </div>
            </div>
        }
    }
    else
    {
        <p>Không có dữ liệu món ăn.</p>
    }
</div>


<div class="col-md-4">
    <div class="card" id="phieu-goi-mon">
        <div class="card-header bg-info text-white">
            <h5>Phiếu gọi món (Bàn @ban)</h5>
        </div>
        <div class="card-body">
            <p><strong>Nhân Viên :</strong> @hoTen</p>
            <p><strong>Email:</strong> @email</p>

            <ul id="phieu-list" class="list-group mb-3"></ul>

            <!-- Order cho ai -->
            <div class="mb-3">
                <label for="orderType" class="form-label"><strong>Order:</strong></label>
                <select id="orderType" class="form-select">
                    <option value="Khách Hàng" selected>Khách Hàng</option>
                    <option value="Nhân Viên">Nhân Viên</option>
                </select>
            </div>

            <!-- Ghi chú -->
            <div class="mb-3">
                <label for="ghiChu" class="form-label"><strong>Ghi chú:</strong></label>
                <textarea id="ghiChu" class="form-control" rows="2" placeholder=""></textarea>
            </div>

            <p><strong>Tổng cộng: </strong><span id="tongCong">0</span> VND</p>

            <button class="btn btn-primary" onclick="xacNhanGoiMon()">Gửi</button>
           
        </div>
    </div>
</div>
</div>

<script>
    let phieu = [];

    // Lấy phiếu từ localStorage khi trang được load
    window.onload = function () {
        const savedPhieu = localStorage.getItem("phieu");
        if (savedPhieu) {
            phieu = JSON.parse(savedPhieu);
            renderPhieu();
        }
    };

    function themVaoPhieu(tenMon, gia) {
        const existing = phieu.find(item => item.ten === tenMon);
        if (existing) {
            existing.soluong += 1;
        } else {
            phieu.push({ ten: tenMon, gia: gia, soluong: 1 });
        }
        renderPhieu();
        savePhieu();
    }

    function renderPhieu() {
        const list = document.getElementById("phieu-list");
        const tongCong = document.getElementById("tongCong");
        list.innerHTML = "";
        let tong = 0;

        phieu.forEach((item, index) => {
            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";

            li.innerHTML = `
                        <div>
                            ${item.ten} x ${item.soluong}
                            <button class="btn btn-sm btn-outline-success ms-2" onclick="tangSoLuong(${index})">+</button>
                            <button class="btn btn-sm btn-outline-danger ms-1" onclick="giamSoLuong(${index})">-</button>
                        </div>
                        <span>${(item.gia * item.soluong).toLocaleString()} VND</span>
                    `;
            list.appendChild(li);
            tong += item.gia * item.soluong;
        });


        // Kiểm tra Order: Nhân Viên -> giảm 50%
        const orderType = document.getElementById("orderType").value;
        if (orderType === "Nhân Viên") {
            tong = tong / 2;
        }

        tongCong.textContent = tong.toLocaleString();
    }

    function tangSoLuong(index) {
        phieu[index].soluong += 1;
        renderPhieu();
        savePhieu();
    }

    function giamSoLuong(index) {
        phieu[index].soluong -= 1;
        if (phieu[index].soluong <= 0) {
            phieu.splice(index, 1);
        }
        renderPhieu();
        savePhieu();
    }

    function savePhieu() {
        localStorage.setItem("phieu", JSON.stringify(phieu));
    }

    function clearPhieu() {
        phieu = [];
        localStorage.removeItem("phieu");
        renderPhieu();
    }

    function xacNhanGoiMon() {
        const ghiChu = document.getElementById("ghiChu").value.trim();
        const orderType = document.getElementById("orderType").value;

        // Tạo bản sao của phiếu để không làm thay đổi mảng gốc
        let phieuGui = phieu.map(item => {
            let giaFinal = item.gia;
            if (orderType === "Nhân Viên") {
                giaFinal = giaFinal / 2; // Giảm 50% cho nhân viên
            }

            return {
                ten: item.ten,
                gia: giaFinal, // ✅ Lưu giá đã giảm
                soluong: item.soluong
            };
        });

        fetch('/Order/Create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                banSo: "@ban",
                ghiChu: ghiChu,
                orderType: orderType,
                phieu: phieuGui // ✅ Dùng giá đã giảm nếu là nhân viên
            })
        })
            .then(response => {
                if (response.ok) {
                    alert("Đã gửi");
                    clearPhieu();
                } else {
                    alert("Gửi đơn thất bại!");
                }
            });
    }


    document.getElementById("orderType").addEventListener("change", function () {
        renderPhieu();
    });


</script>



